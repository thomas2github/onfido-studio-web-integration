{"version":3,"sources":["webpack://Onfido/./components/PhoneNumberInput/index.js"],"names":["FlagComponent","country","className","classNames","style","flagIcon","getCountryFlagSrc","PhoneNumberInput","props","options","countrySelectEl","containerEl","querySelectorAll","document","getElementsByClassName","length","setAttribute","translate","number","clearErrors","actions","numberString","validateNumber","parsedNumber","parsePhoneNumberFromString","setMobileNumber","isValid","this","sms","initialNumber","injectForCountrySelectAriaLabel","smsNumberCountryCode","placeholderLabel","aria-labelledby","onSubmit","e","preventDefault","id","phoneNumberContainer","placeholder","value","onChange","defaultCountry","flagComponent","aria-label","Component","localised"],"mappings":";8sBASA,IAAMA,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACpB,oBACEC,UAAWC,IAAW,iCAAkCC,IAAMC,UAC9DD,MAAO,CACL,iCAA2BE,YAAkBL,EAAS,aAAtD,SAKAM,E,wOAQ8B,WAAM,MACb,EAAKC,MAAtBC,eAD8B,MACpB,GADoB,EAMhCC,EAAkBD,EAAQE,YAC5BF,EAAQE,YAAYC,iBAAiB,4BACrCC,SAASC,uBAAuB,2BAEhCJ,GAAmBA,EAAgBK,OAAS,GAC9CL,EAAgB,GAAGM,aACjB,aACA,EAAKR,MAAMS,UAAU,2C,uBAKhB,SAACC,GAAW,MACY,EAAKV,MAA9BW,EADa,EACbA,YAAaC,EADA,EACAA,QACrBD,IACA,IAAME,EAAeH,GAAkB,GACvC,EAAKI,eAAeD,EAAcD,M,6BAGnB,SAACF,EAAQE,GACxB,IAAMG,EAAeC,YAA2BN,GAC5CK,EACFH,EAAQK,gBAAgBF,EAAaL,OAAQK,EAAaG,WAE1DN,EAAQK,gBAAgB,IAAI,M,0DArCZ,MACOE,KAAKnB,MAAtBoB,EADU,EACVA,IAAKR,EADK,EACLA,QACPS,EAAgBD,EAAIV,OAASU,EAAIV,OAAS,GAChDS,KAAKL,eAAeO,EAAeT,GACnCO,KAAKG,oC,+BAqCE,MAC+CH,KAAKnB,MAAnDS,EADD,EACCA,UAAWc,EADZ,EACYA,qBADZ,IACkCH,WADlC,MACwC,GADxC,EAEDI,EAAmBf,EACvB,2CAEF,OACE,oBACEgB,kBAAgB,mBAChBC,SAAU,SAACC,GAAD,OAAOA,EAAEC,mBAEnB,YAAC,IAAD,CACEC,GAAG,mBACHnC,UAAS,UAAKE,IAAMkC,sBACpBC,YAAaP,EACbQ,MAAOZ,EAAIV,QAAU,GACrBuB,SAAUd,KAAKc,SACfC,eAAgBX,EAChBY,cAAe3C,EACf4C,aAAYZ,S,GA5DSa,aAmEhBC,sBAAUvC","file":"onfido.crossDevice.min.js","sourcesContent":["import { h, Component } from 'preact'\nimport PhoneInput from 'react-phone-number-input'\nimport { parsePhoneNumberFromString } from 'libphonenumber-js/mobile'\nimport classNames from 'classnames'\nimport { localised } from '~locales'\nimport { getCountryFlagSrc } from '~supported-documents'\nimport 'react-phone-number-input/style.css'\nimport style from './style.scss'\n\nconst FlagComponent = ({ country }) => (\n  <span\n    className={classNames('react-phone-number-input__icon', style.flagIcon)}\n    style={{\n      'background-image': `url(${getCountryFlagSrc(country, 'rectangle')})`,\n    }}\n  />\n)\n\nclass PhoneNumberInput extends Component {\n  componentDidMount() {\n    const { sms, actions } = this.props\n    const initialNumber = sms.number ? sms.number : ''\n    this.validateNumber(initialNumber, actions)\n    this.injectForCountrySelectAriaLabel()\n  }\n\n  injectForCountrySelectAriaLabel = () => {\n    const { options = {} } = this.props\n    // HACK: This is necessary as setting the ARIA label with react-phone-number-input library `labels` property\n    //       available in v3 loses the human readable country names.\n    //       Also not clear in library's CHANGELOG how to use `countrySelectProps` to set ARIA label for\n    //       country select component as suggested there.\n    const countrySelectEl = options.containerEl\n      ? options.containerEl.querySelectorAll('.PhoneInputCountrySelect')\n      : document.getElementsByClassName('PhoneInputCountrySelect')\n\n    if (countrySelectEl && countrySelectEl.length > 0) {\n      countrySelectEl[0].setAttribute(\n        'aria-label',\n        this.props.translate('country_select.search.accessibility')\n      )\n    }\n  }\n\n  onChange = (number) => {\n    const { clearErrors, actions } = this.props\n    clearErrors()\n    const numberString = number ? number : ''\n    this.validateNumber(numberString, actions)\n  }\n\n  validateNumber = (number, actions) => {\n    const parsedNumber = parsePhoneNumberFromString(number)\n    if (parsedNumber) {\n      actions.setMobileNumber(parsedNumber.number, parsedNumber.isValid())\n    } else {\n      actions.setMobileNumber('', false)\n    }\n  }\n\n  render() {\n    const { translate, smsNumberCountryCode, sms = {} } = this.props\n    const placeholderLabel = translate(\n      'get_link.number_field_input_placeholder'\n    )\n    return (\n      <form\n        aria-labelledby=\"phoneNumberInput\"\n        onSubmit={(e) => e.preventDefault()}\n      >\n        <PhoneInput\n          id=\"phoneNumberInput\"\n          className={`${style.phoneNumberContainer}`}\n          placeholder={placeholderLabel}\n          value={sms.number || ''}\n          onChange={this.onChange}\n          defaultCountry={smsNumberCountryCode}\n          flagComponent={FlagComponent}\n          aria-label={placeholderLabel}\n        />\n      </form>\n    )\n  }\n}\n\nexport default localised(PhoneNumberInput)\n"],"sourceRoot":""}