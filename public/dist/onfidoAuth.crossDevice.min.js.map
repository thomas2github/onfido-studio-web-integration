{"version":3,"sources":["webpack://OnfidoAuth/./components/PhoneNumberInput/index.js"],"names":["FlagComponent","country","flagsPath","className","classNames","style","flagIcon","toLowerCase","PhoneNumberInput","props","options","countrySelect","containerEl","querySelectorAll","document","getElementsByClassName","length","setAttribute","translate","number","clearErrors","actions","numberString","validateNumber","parsedNumber","parsePhoneNumberFromString","setMobileNumber","isValid","this","sms","initialNumber","injectForCountrySelectAriaLabel","smsNumberCountryCode","placeholderLabel","aria-labelledby","onSubmit","e","preventDefault","id","placeholder","value","onChange","inputClassName","mobileInput","phoneNumberContainer","flagComponent","aria-label","Component","localised"],"mappings":";iWAQA,IAAMA,EAAgB,SAAC,GAAD,MAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,UAAZ,OACpB,oBACEC,UAAWC,IAAW,iCAAkCC,IAAMC,UAC9DD,MAAO,CACL,uCAA2BH,IAA3B,OAAuCD,EAAQM,cAA/C,aAKAC,E,glBAQ8B,WAAM,MACb,EAAKC,MAAtBC,eAD8B,MACpB,GADoB,EAGhCC,EAAgBD,EAAQE,YAC1BF,EAAQE,YAAYC,iBAClB,6CAEFC,SAASC,uBACP,4CAGFJ,GAAiBA,EAAcK,OAAS,GAC1CL,EAAc,GAAGM,aACf,aACA,EAAKR,MAAMS,UAAU,2C,uBAKhB,SAACC,GAAW,MACY,EAAKV,MAA9BW,EADa,EACbA,YAAaC,EADA,EACAA,QACrBD,IACA,IAAME,EAAeH,GAAkB,GACvC,EAAKI,eAAeD,EAAcD,M,6BAGnB,SAACF,EAAQE,GACxB,IAAMG,EAAeC,YAA2BN,GAC5CK,EACFH,EAAQK,gBAAgBF,EAAaL,OAAQK,EAAaG,WAE1DN,EAAQK,gBAAgB,IAAI,M,0DAtCZ,MACOE,KAAKnB,MAAtBoB,EADU,EACVA,IAAKR,EADK,EACLA,QACPS,EAAgBD,EAAIV,OAASU,EAAIV,OAAS,GAChDS,KAAKL,eAAeO,EAAeT,GACnCO,KAAKG,oC,+BAsCE,MAC+CH,KAAKnB,MAAnDS,EADD,EACCA,UAAWc,EADZ,EACYA,qBADZ,IACkCH,WADlC,MACwC,GADxC,EAEDI,EAAmBf,EACvB,2CAEF,OACE,oBACEgB,kBAAgB,mBAChBC,SAAU,SAACC,GAAD,OAAOA,EAAEC,mBAEnB,YAAC,IAAD,CACEC,GAAG,mBACHC,YAAaN,EACbO,MAAOX,EAAIV,QAAU,GACrBsB,SAAUb,KAAKa,SACfxC,QAAS+B,EACTU,eAAc,UAAKrC,IAAMsC,aACzBxC,UAAS,UAAKE,IAAMuC,sBACpBC,cAAe7C,EACf8C,aAAYb,S,GA9DSc,aAqEhBC,sBAAUxC","file":"onfidoAuth.crossDevice.min.js","sourcesContent":["import { h, Component } from 'preact'\nimport PhoneInput from 'react-phone-number-input/native'\nimport { parsePhoneNumberFromString } from 'libphonenumber-js/mobile'\nimport classNames from 'classnames'\nimport { localised } from '../../locales'\nimport 'react-phone-number-input/style.css'\nimport style from './style.scss'\n\nconst FlagComponent = ({ country, flagsPath }) => (\n  <span\n    className={classNames('react-phone-number-input__icon', style.flagIcon)}\n    style={{\n      'background-image': `url(${flagsPath}${country.toLowerCase()}.svg)`,\n    }}\n  />\n)\n\nclass PhoneNumberInput extends Component {\n  componentDidMount() {\n    const { sms, actions } = this.props\n    const initialNumber = sms.number ? sms.number : ''\n    this.validateNumber(initialNumber, actions)\n    this.injectForCountrySelectAriaLabel()\n  }\n\n  injectForCountrySelectAriaLabel = () => {\n    const { options = {} } = this.props\n    // HACK: This is necessary as react-phone-number-input library is not actually setting country select aria-label\n    const countrySelect = options.containerEl\n      ? options.containerEl.querySelectorAll(\n          '.react-phone-number-input__country-select'\n        )\n      : document.getElementsByClassName(\n          'react-phone-number-input__country-select'\n        )\n\n    if (countrySelect && countrySelect.length > 0) {\n      countrySelect[0].setAttribute(\n        'aria-label',\n        this.props.translate('country_select.search.accessibility')\n      )\n    }\n  }\n\n  onChange = (number) => {\n    const { clearErrors, actions } = this.props\n    clearErrors()\n    const numberString = number ? number : ''\n    this.validateNumber(numberString, actions)\n  }\n\n  validateNumber = (number, actions) => {\n    const parsedNumber = parsePhoneNumberFromString(number)\n    if (parsedNumber) {\n      actions.setMobileNumber(parsedNumber.number, parsedNumber.isValid())\n    } else {\n      actions.setMobileNumber('', false)\n    }\n  }\n\n  render() {\n    const { translate, smsNumberCountryCode, sms = {} } = this.props\n    const placeholderLabel = translate(\n      'get_link.number_field_input_placeholder'\n    )\n    return (\n      <form\n        aria-labelledby=\"phoneNumberInput\"\n        onSubmit={(e) => e.preventDefault()}\n      >\n        <PhoneInput\n          id=\"phoneNumberInput\"\n          placeholder={placeholderLabel}\n          value={sms.number || ''}\n          onChange={this.onChange}\n          country={smsNumberCountryCode}\n          inputClassName={`${style.mobileInput}`}\n          className={`${style.phoneNumberContainer}`}\n          flagComponent={FlagComponent}\n          aria-label={placeholderLabel}\n        />\n      </form>\n    )\n  }\n}\n\nexport default localised(PhoneNumberInput)\n"],"sourceRoot":""}