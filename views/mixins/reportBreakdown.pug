mixin displayBreakdownIcon(result)
    if result
        case result
            when 'clear'
                i.material-icons.ml-2(title=result style='font-size: 18px; vertical-align:middle; diplay: inline-block' class='text-success')= 'check_circle'
            when 'consider'
            when 'caution'
                i.material-icons.ml-2(title=result style='font-size: 18px; vertical-align:middle; diplay: inline-block' class='text-warning')= 'error_outline'
            when 'suspected'
                i.material-icons.ml-2(title=result style='font-size: 18px; vertical-align:middle; diplay: inline-block' class='text-danger')= 'error'
            when 'rejected'
                i.material-icons.ml-2(title=result style='font-size: 18px; vertical-align:middle; diplay: inline-block' class='text-danger')= 'cancel'
            default
                span.ml-2.text-secondary= result
      
mixin reportBreakdown(breakdown)
    .d-flex.flex-wrap.justify-content-around
        each val, key in breakdown
            .m-4            
                h6.mt-4= key
                    +displayBreakdownIcon(val.result)
                if val.breakdown
                    each val2, key2 in val.breakdown
                        p.my-1= key2
                            +displayBreakdownIcon(val2.result)
                        if val2.properties
                            each val3, key3 in val2.properties
                                p.my-1.ml-4= key3
                                    +displayBreakdownIcon(val3)

mixin reportBreakdownWorkflow(breakdowns)
    .d-flex.flex-wrap.justify-content-around
        each val, key in breakdowns
            .m-4
                if val.result != 'null'
                    h6.mt-4= key
                        +displayBreakdownIcon(val.result)
                each val2, key2 in val
                    if val2.result != 'null'
                        if key2 != 'result'
                            p.my-1= key2
                                +displayBreakdownIcon(val2.result)
                    if val2.properties
                        each property in val2.properties
                            p.my-1.ml-4= property.name
                                +displayBreakdownIcon(property.value)

mixin displayJson(json, level)
    if json
        each val, key in json
            if typeof val === 'object'
                if isNaN(parseInt(key))
                    h6(style='margin-left: '+level+'em')= key
                else if parseInt(key) >= 0
                    br
                    span= '# '+ (key+1)
                    br
                +displayJson(val, level+1)
            else
                //- for known Faces, display link to applicant and video or photo depending on mediatype
                span(style='margin-left: '+level+'em')= key + ': '
                    b= val
                br

mixin displayKnownFacesProperties(properties)
    h6= properties.matches.length + ' matches'
    each match in properties.matches
        .d-flex.flex-row.justify-content-start.align-items-start.my-3
            if match.media_type == 'live_photos' 
                a(href='/photos/'+match.media_id target='_blank')
                    image(src='/photos/'+match.media_id height=90)
            else if match.media_type == 'live_videos' 
                a(href='/videos/'+match.media_id target='_blank')
                    image(src='/videos/'+match.media_id height=90)
            .d-flex.flex-column.justify-content-start.align-items-start.ml-4
                span applicant_id:
                    a.ml-2(href='/applicants/'+match.applicant_id target='_blank')
                        b= match.applicant_id
                span score:
                    b.ml-2= match.score
                span media_id:
                    if match.media_type == 'live_photos' 
                        a.ml-2(href='/photos/'+match.media_id target='_blank')
                            b= match.media_id
                    else if match.media_type == 'live_videos' 
                        a.ml-2(href='/videos/'+match.media_id target='_blank')
                            b= match.media_id
                span media_type:
                    b.ml-2= match.media_type